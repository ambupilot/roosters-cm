let roosters=[],comments={},locoflexComments={},isEditable=!1;async function fetchAllWeeks(){try{const e=await fetch("get_roosters.php"),t=await e.json();roosters=t,populateWeekSelect();const n=51;populateTable(n),updateWeekInfo(n)}catch(e){console.error("Fout bij ophalen van gegevens:",e),showFeedback("Fout bij ophalen van gegevens","error")}}async function fetchWeekData(e){try{const t=await fetch(`get_roosters.php?week=${e}`),n=await t.json();roosters=n,populateTable(e),updateWeekInfo(e)}catch(e){console.error("Fout bij ophalen van weekgegevens:",e),showFeedback("Fout bij ophalen van weekgegevens","error")}}function updateWeekInfo(e){const t=(new Date).getFullYear(),n=dayjs().year(t).isoWeek(e).startOf("isoWeek"),o=dayjs().year(t).isoWeek(e).endOf("isoWeek");document.getElementById("current-week").textContent=`Kalenderweek: ${e}`,document.getElementById("week-dates").textContent=`${n.format("DD MMMM YYYY")} tot en met ${o.format("DD MMMM YYYY")}`}function populateWeekSelect(){const e=[...new Set(roosters.map((e=>e.startKalenderWeek)))],t=document.getElementById("week-select");t.innerHTML=e.map((e=>`<option value="${e}">Week ${e}</option>`)).join(""),t.addEventListener("change",(e=>{fetchWeekData(parseInt(e.target.value))}))}function populateTable(e){const t=document.getElementById("rooster-body");t.innerHTML="",roosters.filter((t=>Number(t.startKalenderWeek)===e)).forEach((n=>{const o=`${n.startKalenderWeek}-${n.dagVanDeWeek}`;comments[o]=void 0!==comments[o]?comments[o]:n.opmerkingen||"",locoflexComments[o]=void 0!==locoflexComments[o]?locoflexComments[o]:n.locoflex||"";const a=(new Date).getFullYear(),s=dayjs().year(a).isoWeek(e).startOf("isoWeek").add(n.dagVanDeWeek-1,"day");t.innerHTML+=`\n        <tr>\n          <td class="p-2 text-gray-700">${["Maandag","Dinsdag","Woensdag","Donderdag","Vrijdag","Zaterdag","Zondag"][n.dagVanDeWeek-1]}</td>\n          <td class="p-2 text-gray-700">${s.format("DD MMMM YYYY")}</td>\n          <td class="p-2 text-gray-700">${n.dienst}</td>\n          <td class="p-2">\n            <input type="text" value="${comments[o]}" data-key="${o}" ${isEditable?"":"disabled"} class="w-full p-2 border border-gray-300 rounded-lg">\n          </td>\n          <td class="p-2">\n            <input type="text" value="${locoflexComments[o]}" data-locoflex-key="${o}" ${isEditable?"":"disabled"} class="w-full p-2 border border-gray-300 rounded-lg">\n          </td>\n        </tr>\n      `})),document.querySelectorAll("input[data-key]").forEach((e=>{e.addEventListener("input",(e=>{const t=e.target.dataset.key;comments[t]=e.target.value}))})),document.querySelectorAll("input[data-locoflex-key]").forEach((e=>{e.addEventListener("input",(e=>{const t=e.target.dataset.locoflexKey;locoflexComments[t]=e.target.value}))}))}async function saveComments(){const e=document.getElementById("save-button");e.textContent="Opslaan...",e.disabled=!0;try{const e=Object.entries(comments).map((([e,t])=>{const[n,o]=e.split("-");return{...roosters.find((e=>e.startKalenderWeek==n&&e.dagVanDeWeek==o)),opmerkingen:t||"",locoflex:locoflexComments[e]||""}})),t=await fetch("save_comments.php",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!t.ok)throw new Error(`HTTP-foutcode: ${t.status}`);const n=await t.json();n.success?showFeedback("Gegevens succesvol opgeslagen!","success"):n.error?showFeedback(`Opslaan mislukt: ${n.error}`,"error"):showFeedback("Opslaan mislukt zonder duidelijke foutmelding","error")}catch(e){console.error("Fout bij opslaan van opmerkingen:",e),showFeedback(`Fout bij opslaan van gegevens: ${e.message}`,"error")}finally{e.textContent="Opslaan",e.disabled=!1}}function updateEditableState(){document.querySelectorAll("input").forEach((e=>{e.disabled=!isEditable})),document.getElementById("save-button").disabled=!isEditable}function showFeedback(e,t){const n=document.getElementById("feedback");n.textContent=e,n.className="mt-4 p-4 rounded-lg shadow "+("success"===t?"bg-green-100 text-green-700":"bg-red-100 text-red-700"),n.style.display="block",setTimeout((()=>{n.style.display="none"}),3e3)}document.addEventListener("DOMContentLoaded",(()=>{fetchAllWeeks(),document.getElementById("edit-toggle").addEventListener("change",(e=>{isEditable="aan"===e.target.value,updateEditableState()})),document.getElementById("save-button").addEventListener("click",saveComments)}));